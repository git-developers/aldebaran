<?php

namespace MainBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EventHasFormRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventHasFormRepository extends EntityRepository
{

    public function findOneById($id)
    {
        $em = $this->getEntityManager();
        $dql = "
            SELECT eventHasForm
            FROM MainBundle:EventHasForm eventHasForm
            WHERE
            eventHasForm.idIncrement = :id
            ";

        $query = $em->createQuery($dql);
        $query->setParameter('id', $id);

        return $query->getOneOrNullResult();
    }

    public function findAll()
    {
        $em = $this->getEntityManager();
        $dql = "
            SELECT eventHasForm
            FROM MainBundle:EventHasForm eventHasForm
            WHERE
            ORDER BY eventHasForm.idIncrement DESC
            ";

        $query = $em->createQuery($dql);

        return $query->getResult();
    }

    public function findAllByEvent($event)
    {
        $em = $this->getEntityManager();
        $dql = "
            SELECT eventHasForm
            FROM MainBundle:EventHasForm eventHasForm
            WHERE
            eventHasForm.event = :event
            ";

        $query = $em->createQuery($dql);
        $query->setParameter('event', $event);

        return $query->getResult();
    }

    public function findOneByEventAndForm($eventUniqueId, $idForm)
    {
        $em = $this->getEntityManager();
        $dql = "
            SELECT eventHasForm, event, form
            FROM MainBundle:EventHasForm eventHasForm
            INNER JOIN eventHasForm.event event
            INNER JOIN eventHasForm.form form
            WHERE
            event.uniqueId = :eventUniqueId AND
            form.idIncrement = :idForm
            ";

        $query = $em->createQuery($dql);
        $query->setParameter('eventUniqueId', $eventUniqueId);
        $query->setParameter('idForm', $idForm);

        return $query->getOneOrNullResult();
    }

}
